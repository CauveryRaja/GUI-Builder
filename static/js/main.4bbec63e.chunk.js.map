{"version":3,"sources":["logo.svg","config/componentList.js","utils/fontAwesome.js","components/toolbar/toolbar.js","models/keyMap.js","config/componentProps.js","components/input/inputComponent.js","components/select/selectComponent.js","components/textarea/textareaComponent.js","components/paragraph/paragraphComponent.js","components/heading/headingComponent.js","components/button/buttonComponent.js","components/componentRenderer/componentRenderer.js","components/canvasToolbar/canvasToolbar.js","components/canvas/canvas.js","App.js","reportWebVitals.js","index.js"],"names":["componentList","id","name","icon","library","add","faPlus","faEdit","faTrash","faICursor","faSquare","faParagraph","faHeading","faFont","faThList","faCog","faFile","faPaintBrush","Toolbar","state","components","listenDragStart","bind","event","dataTransfer","setData","target","this","map","component","className","onDragStart","draggable","Component","UniqueKeyGenMap","keyMap","input","select","textarea","paragraph","heading","button","fetchFromStorage","localStorage","setItem","JSON","stringify","getItem","parse","type","count","componentProps","width","height","InputComponent","inputType","setState","style","position","left","props","x","top","y","onClick","listenToolClick","onDragEnd","moveElement","SelectComponent","TextAreaComponent","ParagraphComponent","HeadingComponent","headingType","elm","React","createElement","ButtonComponent","ComponentRenderer","domElm","componentType","getComponentByType","CanvasToolbar","clearCanvas","componentCount","DropCanvas","componentsMarkup","componentsMetaInfo","size","bindEventListeners","droppedComponents","document","getElementById","componentIds","Object","keys","length","forEach","i","item","renderElement","ev","e","preventDefault","effectAllowed","elmType","getData","computeCoordinates","getUniqueId","save","saveElement","ReactDOM","render","Fragment","values","startX","startY","rect","getBoundingClientRect","clientX","clientY","offset","console","log","unmountComponentAtNode","initMap","onDrop","listenDragEnd","onDragOver","listenDragOver","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.4bbec63e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const componentList = [{\n    id: 'input',\n    name: 'Input',\n    icon: 'i-cursor'\n},\n{\n    id: 'textarea',\n    name: 'Text Area',\n    icon: 'font'\n},\n{\n    id: 'paragraph',\n    name: 'Paragraph',\n    icon: 'paragraph'\n},\n{\n    id: 'heading',\n    name: 'Heading',\n    icon: 'heading'\n},\n{\n    id: 'button',\n    name: 'Button',\n    icon: 'square'\n}];\n\nexport default componentList;\n","import { library } from '@fortawesome/fontawesome-svg-core';\n\nimport { faPlus, faEdit, faTrash, faICursor, faSquare, faParagraph,\n        faHeading, faFont, faThList, faCog, faFile, faPaintBrush }\n        from '@fortawesome/free-solid-svg-icons';\n\n// import { faHeader }\n//         from '@fortawesome/free-regular-svg-icons';\n\n\nlibrary.add(\n  faPlus, faEdit, faTrash, faICursor, faSquare, faParagraph, faHeading,\n  faFont, faThList, faCog, faFile, faPaintBrush\n);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './toolbar.scss';\n\nimport componentList from '../../config/componentList';\nimport fontawesome from '../../utils/fontAwesome';\n\nclass Toolbar extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            components: componentList\n        }\n        this.listenDragStart = this.listenDragStart.bind(this);\n    }\n\n    /**\n     * Called when a Component is dragged from the list\n     * @param {SyntheticEvent} event Event object\n     */\n    listenDragStart(event) {\n        event.dataTransfer.setData(\"text/plain\", event.target.id);\n    }\n\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return this.state.components.map(component => (\n                <li className=\"tool\"\n                    id={component.id} key={component.id}\n                    onDragStart={this.listenDragStart}\n                    draggable=\"true\">\n                        <span className=\"tool-icon\">\n                            <FontAwesomeIcon icon={component.icon}/>\n                        </span>\n                        {component.name}\n                </li>\n        ));\n    }\n}\n\nexport default Toolbar;\n","class UniqueKeyGenMap {\n    constructor() {\n        this.keyMap = {\n            input: 0,\n            select: 0,\n            textarea: 0,\n            paragraph: 0,\n            heading: 0,\n            button: 0\n        };\n        this.fetchFromStorage();\n    }\n\n    initMap() {\n        this.keyMap = {\n            input: 0,\n            select: 0,\n            textarea: 0,\n            paragraph: 0,\n            heading: 0,\n            button: 0\n        };\n        localStorage.setItem('keyMap', JSON.stringify(this.keyMap));\n    }\n\n    fetchFromStorage() {\n        let map = localStorage.getItem('keyMap');\n        if(!map) {\n            localStorage.setItem('keyMap', JSON.stringify(this.keyMap));\n        }\n        else {\n            this.keyMap = JSON.parse(map);\n        }\n    }\n\n    getUniqueId(type) {\n        let count = this.keyMap[type]++;\n        localStorage.setItem('keyMap', JSON.stringify(this.keyMap));\n        return type + '-' + count;\n    }\n}\n\nexport default UniqueKeyGenMap;\n","const componentProps = {\n    input: {\n        width: 125,\n        height: 25\n    },\n    select: {\n        width: 125,\n        height: 25\n    },\n    textarea: {\n        width: 120,\n        height: 120\n    },\n    paragraph: {\n        width: 100,\n        height: 20\n    },\n    heading: {\n        width: 150,\n        height: 20\n    },\n    button: {\n        width: 100,\n        height: 30\n    }\n};\n\nexport default componentProps;\n","import React, { Component } from 'react';\nimport './input.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fontawesome from '../../utils/fontAwesome';\n\nclass InputComponent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            type: \"text\"\n        }\n    }\n\n    /**\n     * Set Input type from the input type\n     * @param {string} inputType Selected Input field type\n     */\n    listenToolClick(inputType) {\n        this.setState({\n            type: inputType\n        })\n    }\n\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return (\n            <span className=\"field-wrapper\">\n                <span className=\"field-toolbar\" style={{position:\"absolute\", left:this.props.x+\"px\",\n                    top:this.props.y-50+\"px\", width: this.props.width+\"px\"}}>\n                    <button className={`field-tool ${this.state.type==='text' ? 'active': ''}`}\n                        onClick={this.listenToolClick.bind(this, \"text\")}>\n                        <FontAwesomeIcon icon=\"font\"></FontAwesomeIcon>\n                    </button>\n                    <button className={`field-tool ${this.state.type==='number' ? 'active': ''}`}\n                        onClick={this.listenToolClick.bind(this, \"number\")}>\n                        #\n                    </button>\n                    <button className={`field-tool ${this.state.type==='file' ? 'active': ''}`}\n                        onClick={this.listenToolClick.bind(this, \"file\")}>\n                        <FontAwesomeIcon icon=\"file\"></FontAwesomeIcon>\n                    </button>\n                </span>\n                <input type={this.state.type} id={this.props.id} name={this.props.id} onDragStart={this.props.listenDragStart}\n                    onDragEnd={this.props.moveElement} draggable=\"true\"\n                    style={{position:\"absolute\", left:this.props.x+\"px\", top:this.props.y+\"px\",\n                            width: this.props.width+\"px\", height: this.props.height+\"px\"}}/>\n            </span>\n        )\n    }\n}\n\nexport default InputComponent;\n","import React, { Component } from 'react';\nimport './select.scss';\n\nclass SelectComponent extends Component {\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return (\n            <select id={this.props.id} name={this.props.id} onDragStart={this.props.listenDragStart}\n                onDragEnd={this.props.moveElement} draggable=\"true\"\n                style={{position:\"absolute\", left:this.props.x+\"px\", top:this.props.y+\"px\",\n                        width: this.props.width+\"px\", height: this.props.height+\"px\"}}>\n            </select>\n        )\n    }\n}\n\nexport default SelectComponent;\n","import React, { Component } from 'react';\nimport './textarea.scss';\n\nclass TextAreaComponent extends Component {\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return (\n            <textarea id={this.props.id} name={this.props.id} onDragStart={this.props.listenDragStart}\n                onDragEnd={this.props.moveElement} draggable=\"true\"\n                style={{position:\"absolute\", left:this.props.x+\"px\", top:this.props.y+\"px\",\n                        width: this.props.width+\"px\", height: this.props.height+\"px\"}}>\n            </textarea>\n        )\n    }\n}\n\nexport default TextAreaComponent;\n","import React, { Component } from 'react';\nimport './paragraph.scss';\n\nclass ParagraphComponent extends Component {\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return (\n            <p id={this.props.id} name={this.props.id} onDragStart={this.props.listenDragStart}\n                onDragEnd={this.props.moveElement} draggable=\"true\"\n                style={{position:\"absolute\", left:this.props.x+\"px\", top:this.props.y+\"px\",\n                        width: this.props.width+\"px\", height: this.props.height+\"px\"}}>\n                {this.props.id}\n            </p>\n        )\n    }\n}\n\nexport default ParagraphComponent;\n","import React, { Component } from 'react';\nimport './heading.scss';\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import fontawesome from '../../utils/fontAwesome';\n\nclass HeadingComponent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            type: \"h2\"\n        }\n    }\n\n    /**\n     * Set Heading type from the input type\n     * @param {string} headingType Selected Heading type\n     */\n    listenToolClick(headingType) {\n        this.setState({\n            type: headingType\n        })\n    }\n\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        let elm = React.createElement(this.state.type, {\n                            id: this.props.id,\n                            name: this.props.id,\n                            onDragStart: this.props.listenDragStart,\n                            onDragEnd: this.props.moveElement,\n                            draggable: 'true',\n                            style: {position:\"absolute\", left:this.props.x+\"px\", top:this.props.y+\"px\",\n                                    width: this.props.width+\"px\", height: this.props.height+\"px\"}\n                        }, this.props.id);\n        return (\n            <span className=\"field-wrapper\">\n                <span className=\"field-toolbar\" style={{position:\"absolute\", left:this.props.x-30+\"px\",\n                    top:this.props.y-50+\"px\", width: this.props.width+\"px\"}}>\n                    <button className={`field-tool ${this.state.type==='h2' ? 'active': ''}`}\n                        onClick={this.listenToolClick.bind(this, \"h2\")}>\n                        h2\n                    </button>\n                    <button className={`field-tool ${this.state.type==='h3' ? 'active': ''}`}\n                        onClick={this.listenToolClick.bind(this, \"h3\")}>\n                        h3\n                    </button>\n                    <button className={`field-tool ${this.state.type==='h4' ? 'active': ''}`}\n                        onClick={this.listenToolClick.bind(this, \"h4\")}>\n                        h4\n                    </button>\n                </span>\n                {elm}\n            </span>\n        )\n    }\n}\n\nexport default HeadingComponent;\n","import React, { Component } from 'react';\nimport './button.scss';\n\nclass ButtonComponent extends Component {\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return (\n            <button id={this.props.id} name={this.props.id} onDragStart={this.props.listenDragStart}\n                onDragEnd={this.props.moveElement} draggable=\"true\"\n                style={{position:\"absolute\", left:this.props.x+\"px\", top:this.props.y+\"px\",\n                        width: this.props.width+\"px\", height: this.props.height+\"px\"}}>\n                {this.props.id}\n            </button>\n        )\n    }\n}\n\nexport default ButtonComponent;\n","import React, { Component } from 'react';\n\nimport InputComponent from '../input/inputComponent';\nimport SelectComponent from '../select/selectComponent';\nimport TextAreaComponent from '../textarea/textareaComponent';\nimport ParagraphComponent from '../paragraph/paragraphComponent';\nimport HeadingComponent from '../heading/headingComponent';\nimport ButtonComponent from '../button/buttonComponent';\n\nclass ComponentRenderer extends Component {\n\n    /**\n     * Returns React Element based on Component type \n     */\n    getComponentByType() {\n        let domElm;\n        switch (this.props.componentType) {\n            case 'input':\n                    domElm =    <InputComponent key={this.props.id} id={this.props.id} name={this.props.id}\n                                    x={this.props.x} y={this.props.y} width={this.props.width}\n                                    height={this.props.height} listenDragStart={this.props.listenDragStart}\n                                    moveElement={this.props.moveElement}>\n                                </InputComponent>\n                    break;\n            case 'select':\n                    domElm =    <SelectComponent key={this.props.id} id={this.props.id} name={this.props.id}\n                                    x={this.props.x} y={this.props.y} width={this.props.width}\n                                    height={this.props.height} listenDragStart={this.props.listenDragStart}\n                                    moveElement={this.props.moveElement}>\n                                </SelectComponent>\n                    break;\n            case 'textarea':\n                    domElm =    <TextAreaComponent key={this.props.id} id={this.props.id} name={this.props.id}\n                                    x={this.props.x} y={this.props.y} width={this.props.width}\n                                    height={this.props.height} listenDragStart={this.props.listenDragStart}\n                                    moveElement={this.props.moveElement}>\n                                </TextAreaComponent>\n                    break;\n            case 'paragraph':\n                    domElm =    <ParagraphComponent key={this.props.id} id={this.props.id} name={this.props.id}\n                                    x={this.props.x} y={this.props.y} width={this.props.width}\n                                    height={this.props.height} listenDragStart={this.props.listenDragStart}\n                                    moveElement={this.props.moveElement}>\n                                </ParagraphComponent>\n                    break;\n            case 'heading':\n                    domElm =    <HeadingComponent key={this.props.id} id={this.props.id} name={this.props.id}\n                                    x={this.props.x} y={this.props.y} width={this.props.width}\n                                    height={this.props.height} listenDragStart={this.props.listenDragStart}\n                                    moveElement={this.props.moveElement}>\n                                </HeadingComponent>\n                    break;\n            case 'button':\n                    domElm =    <ButtonComponent key={this.props.id} id={this.props.id} name={this.props.id}\n                                    x={this.props.x} y={this.props.y} width={this.props.width}\n                                    height={this.props.height} listenDragStart={this.props.listenDragStart}\n                                    moveElement={this.props.moveElement}>\n                                </ButtonComponent>\n                    break;\n            default:\n                    domElm = <span>Hello</span>\n        }\n        return domElm;\n    }\n\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return this.getComponentByType(this.props.componentType);\n    }\n}\n\nexport default ComponentRenderer;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './canvasToolbar.scss';\nimport fontawesome from '../../utils/fontAwesome';\n\nclass CanvasToolbar extends Component {\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    render() {\n        return (\n            <ul id=\"canvas-toolbar\">\n                <li className=\"action-btn\" onClick={this.props.clearCanvas} key=\"clear\">\n                    <span className=\"tool-icon\">\n                        <FontAwesomeIcon icon=\"trash\"/>\n                    </span>\n                    Clear All\n                    <span className=\"countIndicator\">{this.props.componentCount}</span>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default CanvasToolbar;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './canvas.scss';\n\nimport UniqueKeyGenMap from '../../models/keyMap';\nimport componentProps from '../../config/componentProps';\n\nimport ComponentRenderer from '../componentRenderer/componentRenderer';\nimport CanvasToolbar from '../canvasToolbar/canvasToolbar';\n\nclass DropCanvas extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            componentsMarkup: {},\n            componentsMetaInfo: {},\n            size: 0\n        };\n        this.keyMap = new UniqueKeyGenMap();\n        this.bindEventListeners();\n    }\n\n    componentDidMount() {\n        let droppedComponents = localStorage.getItem('droppedComponents');\n        droppedComponents = !droppedComponents ? {} : JSON.parse(droppedComponents);\n        this.setState({\n            componentsMetaInfo: droppedComponents\n        })\n        let target = document.getElementById('canvas');\n        let componentIds = Object.keys(droppedComponents);\n        this.setState({\n            size: componentIds.length\n        })\n        componentIds.forEach((id, i) => {\n            let item = droppedComponents[id];\n            this.renderElement(target, item.componentType, id, item.x, item.y);\n        });\n    }\n\n    listenDragStart(ev) {\n        ev.dataTransfer.setData(\"text/plain\", \"move\");\n    }\n\n    listenDragOver(e) {\n        e.preventDefault();\n    }\n\n    listenDragEnd(e) {\n        e.preventDefault();\n        e.dataTransfer.effectAllowed = 'move';\n        let elmType = e.dataTransfer.getData('text/plain');\n        if(elmType==='move') {\n            // this.moveElement(e.target, x, y);\n            return;\n        }\n        this.setState({\n            size: this.state.size+1\n        })\n        let {x, y} = this.computeCoordinates(e);\n        this.renderElement(e.target, elmType, this.keyMap.getUniqueId(elmType), x, y, true);\n        return false;\n    }\n\n    moveElement(event) {\n        event.preventDefault();\n        let target = event.target;\n        let {x, y} = this.computeCoordinates(event);\n        this.renderElement(document.getElementById('canvas'),\n                            this.state.componentsMetaInfo[target.id].componentType, target.id, x, y, true);\n    }\n\n    saveElement(type, id, x, y) {\n        let droppedComponents = localStorage.getItem('droppedComponents');\n        droppedComponents = !droppedComponents ? {} : JSON.parse(droppedComponents);\n        let { width, height } = {...componentProps[type]};\n        x -= width/2;\n        y -= height/2;\n        droppedComponents[id] = {\n            componentType: type,\n            x: x,\n            y: y\n        };\n        localStorage.setItem('droppedComponents', JSON.stringify(droppedComponents));\n        this.setState({\n            componentsMetaInfo: droppedComponents\n        });\n    }\n\n    renderElement(target, type, id, x, y, save) {\n        let { width, height } = {...componentProps[type]};\n        if(save)\n            this.saveElement(type, id, x, y);\n        this.setState((state, props) => {\n            let elm =   <ComponentRenderer id={id} key={id}\n                            componentType={type}\n                            x={state.componentsMetaInfo[id].x}\n                            y={state.componentsMetaInfo[id].y}\n                            width={width} height={height}\n                            listenDragStart={this.listenDragStart}\n                            moveElement={this.moveElement}>\n                        </ComponentRenderer>\n            let map = state.componentsMarkup;\n            map[id] = elm;\n            ReactDOM.render(<React.Fragment>{Object.values(map)}</React.Fragment>, target);\n            return {\n                ...state,\n                componentsMarkup: map\n            }\n        });\n    }\n\n    computeCoordinates(event) {\n        let startX, startY, offsetX, offsetY, canvas;\n        canvas = document.getElementById('canvas');\n        let rect = canvas.getBoundingClientRect();\n        startX = rect.x;\n        startY = rect.y;\n        /*  Firefox Open Issue\n            event.client/page is not populated in Firefox.\n            Visit \"https://bugzilla.mozilla.org/show_bug.cgi?id=505521#c80\"\n        */\n        offsetX = event.clientX - startX;\n        offsetY = event.clientY - startY;\n        return {\n            x: offsetX,\n            y: offsetY\n        };\n    }\n\n    computeOverlappingRegion(type, id, x, y) {\n        let componentIds = Object.keys(this.state.componentsMetaInfo);\n        let offset = {\n            x: 0,\n            y: 0\n        };\n        for(let i=0; i<componentIds.length; i++) {\n            let item = this.state.componentsMetaInfo[componentIds[i]];\n            let {width, height} = {...componentProps[item.componentType]};\n            if(item.x<=x && x<=item.x+width) {\n                if(item.y<=y && y<=item.y+height) {\n                    offset['x'] = item.x+width - x;\n                    offset['y'] = item.y+height - y;\n                    break;\n                }\n            }\n        }\n        console.log(offset);\n        return offset;\n    }\n\n    clearCanvas() {\n        ReactDOM.unmountComponentAtNode(document.getElementById('canvas'));\n        localStorage.setItem('droppedComponents', '');\n        this.setState({\n            componentsMarkup: {},\n            componentsMetaInfo: {},\n            size: 0\n        });\n        this.keyMap.initMap();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <CanvasToolbar clearCanvas={this.clearCanvas} componentCount={this.state.size}></CanvasToolbar>\n                <div className=\"canvasContainer\">\n                    <div id=\"canvas\" onDrop={this.listenDragEnd} onDragOver={this.listenDragOver}>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    bindEventListeners() {\n        this.listenDragOver = this.listenDragOver.bind(this);\n        this.listenDragEnd = this.listenDragEnd.bind(this);\n        this.clearCanvas = this.clearCanvas.bind(this);\n        this.moveElement = this.moveElement.bind(this);\n        this.computeCoordinates = this.computeCoordinates.bind(this);\n        this.renderElement = this.renderElement.bind(this);\n        this.saveElement = this.saveElement.bind(this);\n    }\n}\n\nexport default DropCanvas;\n","import logo from './logo.svg';\nimport './App.scss';\n\nimport Toolbar from './components/toolbar/toolbar';\nimport DropCanvas from './components/canvas/canvas';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fontawesome from './utils/fontAwesome';\n\nfunction App() {\n    /**\n     * Lifecycle method that renders React Elements in DOM\n     */\n    return (\n        <div className=\"App\">\n            <header>\n                <h2 className=\"app-title\">\n                    <FontAwesomeIcon className=\"logo highlight\" icon=\"paint-brush\"></FontAwesomeIcon>\n                    React <span className=\"highlight\">Studio</span>\n                </h2>\n            </header>\n            <main>\n                <section className=\"panel-left\">\n                    <Toolbar></Toolbar>\n                </section>\n                <section className=\"panel-right\">\n                    <DropCanvas></DropCanvas>\n                </section>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}